import matplotlib.pyplot as plt
plt.rcParams['font.family'] = ['Arial Unicode MS', 'STHeiti', 'STSong', 'SimSun', 'Microsoft YaHei', 'Heiti TC', 'STKaiti', 'LiSu', 'Apple LiGothic', 'Hiragino Sans GB', 'Noto Sans CJK SC', 'Source Han Sans SC']

# 请求密度 实际资源消耗

x = [0,10,20,30,40,50,60,70,80,90,100]
# avg
# y1 = [9.852,9.848,10.378,10.884,11.137,10.588,11.711,11.792,11.816,12.034,11.82]
# y2 = [9.852,9.826,9.861,10.085,10.085,10.214,10.357,10.94,11.319,11.457,11.598]
# y3 = [9.852,9.788,9.936,10.118,9.943,10.043,10.01,10.039,10.384,10.188,10.279]
# p50
# y1 = [9.683,9.727,10.151,10.919,11.151,10.287,11.103,11.055,11.103,11.215,11.127]
# y2 = [9.683,9.727,9.695,9.799,9.751,9.791,9.863,10.287,10.647,10.895,11.071]
# y3 = [9.683,9.727,9.815,9.783,9.719,9.807,9.799,9.775,10.143,10.031,10.079]
# p95
y1 = [10.143,10.775,11.729,12.079,12.111,12.223,16.103,16.527,17.103,17.071,16.887]
y2 = [10.143,10.191,11.295,11.663,11.639,11.799,12.519,14.719,15.599,15.735,15.903]
y3 = [10.143,10.767,10.855,11.615,11.471,11.543,11.439,11.623,11.687,11.535,11.687]
# p99
# y1 = [11.415,11.895,12.191,12.527,12.919,15.855,26.783,31.503,32.111,32.063,32.111]
# y2 = [11.415,11.767,11.791,12.231,12.431,12.687,16.543,19.055,20.511,19.391,19.567]
# y3 = [11.415,11.599,11.735,11.903,11.871,11.999,11.895,12.103,12.031,11.847,12.039]
# p999
# y1 = [14.103,19.103,20.111,22.127,30.111,37.119,47.103,50.111,52.127,53.119,53.119]
# y2 = [14.103,19.103,19.103,20.111,26.111,21.103,24.111,38.111,44.127,42.111,45.119]
# y3 = [14.103,14.103,14.103,13.103,13.103,13.103,15.103,18.111,17.103,17.103,17.103]
# p9999
# y1 = [25.103,32.111,33.119,34.111,42.001,46.111,56.127,59.103,62.111,63.103,65.119]
# y2 = [25.103,32.111,30.111,32.111,43.103,44.127,51.103,52.127,54.111,56.127,59.103]
# y3 = [25.103,23.103,27.103,22.111,21.111,24.111,28.111,33.119,31.103,34.111,36.127]

# 绘制折线图
plt.plot(x, y1, color='red',  linewidth=2, marker='o', label='Cfs')
plt.plot(x, y2, color='blue',  linewidth=2, marker='s', label='Nice19')
plt.plot(x, y3, color='green',  linewidth=2, marker='^', label='Batch')

# 添加网格线
plt.grid(True, linestyle='--', linewidth=0.5)

# 设置图例
plt.legend()

# 设置 x 轴标签
plt.xlabel("负载强度")
# 设置 y 轴标签
# plt.ylabel("时延平均数(ms)")
# plt.ylabel("时延中位数(ms)")
plt.ylabel("时延95%分位数(ms)")

# 限制y轴的显示范围
# plt.ylim(9.5, 12.5)

# 显示图表
# plt.show()
plt.savefig("./p95.svg", format="svg")
